@import '../../sass/colors';


.container {
  display: flex;
  flex: 1 1 auto;
  flex-direction: row;
  margin: auto;
  max-width: 1000px;
  width: 700px;
  height: 100%;

  .converge-plot {
    background-color: $solver-background-color;
    color: $primary-color;
    padding: 0.5em;
    border-radius: $container-border-radius;
    flex: 1 1 auto;
    width: 30px;
    align-self: stretch;
    &:hover {
      cursor: pointer;
    }
  }


  .sub-container {
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    padding: 1em;
    width: 10px;
    align-self: stretch;


    .progress-bar {
      order: 1;
      margin: 0 auto auto;
      height: 100%;
    }
  }
  /* The Modal (background) */
  .modal {
    -webkit-animation-name: fadeIn; /* Fade in the background */
    -webkit-animation-duration: 0.4s;
    animation-duration: 0.4s;
    animation-name: fadeIn;
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.8); /* Black w/ opacity */
    display: none; /* Hidden by default */
    height: 100%; /* Full height */
    left: 0;
    overflow: auto; /* Enable scroll if needed */
    position: fixed; /* Stay in place */
    top: 0;
    width: 100%; /* Full width */
    z-index: 1; /* Sit on top */
  }
  /* Modal Content */
  .modal-content {
    -webkit-animation-name: slideIn;
    -webkit-animation-duration: 0.4s;
    animation-duration: 0.4s;
    animation-name: slideIn;
    background-color: $background-color;
    margin: auto;
    position: relative;
    top: 20%;
    width: 600px;
    border-radius: $container-border-radius;
    display: flex;
    flex-direction: column;
    flex: 1 1 auto;
    color: $primary-color;

    .modal-converge-plot {
      background-color: $solver-background-color;
      color: $primary-color;
      padding: 0.5em;
      border-radius: $container-border-radius;
      flex: 1 1 auto;
      width: 100%;
      align-self: stretch;
    }
    .modal-header {
      padding: 2px;
      margin: auto;
      text-align: center;
      display: flex;
      flex: 1 1 auto;
      .sub-title {
        display: flex;
        width: 400px;
      }
      .sub-con {
        display: flex;
        width: 100px;
      }

    }

    .modal-body {
      padding: 20px 16px;
      display: block;
      margin: 10px 100px;
      background-color: $explain-background-color;
      border-radius: $container-border-radius;


      .modal-item {
        margin: auto;
        padding: 5px;
        text-align: center;
        text-transform: uppercase;
      }
      .modal-item:hover {
        color: $btn-on-mouse-over;
        cursor: pointer;
      }
    }

    .modal-footer {
      display: flex;
      margin: 20px auto;
      position: relative;

      .modal-btn{
        align-self: flex-start;
        border: 4px solid $btn-color;
        border-radius: 10px;
        color: $btn-color;
        cursor: pointer;
        display: inline-block;
        float: left;
        letter-spacing: 1px;
        padding: 5px;
        text-align: center;
        touch-action: manipulation;
        background-color: $btn-background;
        box-shadow: 2px 2px $btn-on-mouse-over;

      }
      .modal-btn:hover {
        color: $btn-on-mouse-over;
        border-color: $btn-on-mouse-over;
        background-color: $background-color;
        box-shadow: 2px 2px $background-color;
      }
    }

  }

  /* The Close Button */
  .close {
    color: $primary-color;
    display: flex;
    float: right;
    font-size: 28px;
    font-weight: bold;
    margin: auto
  }

  .close:hover,
  .close:focus {
    color: $btn-on-mouse-over;
    text-decoration: none;
    cursor: pointer;
  }

  /* Add Animation */
  @-webkit-keyframes slideIn {
    from {
      opacity: 0;
      top: -300px;
    }
    to {
      opacity: 1;
      top: 20%;
    }
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      top: -300px;
    }
    to {
      opacity: 1;
      top: 20%;
    }
  }

  @-webkit-keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}




/*
* react-circular-progressbar styles
*
* All of the styles in this file are optional and configurable!
*/

:global {
  .CircularProgressbar {
    /*
     * This fixes an issue where the CircularProgressbar svg has
     * 0 width inside a "display: flex" container, and thus not visible.
     *
     * If you're not using "display: flex", you can remove this style.
     */
  height: 100%;
  }

  .CircularProgressbar .CircularProgressbar-path {
    stroke: $scroll-bar-color;
    stroke-linecap: round;
    transition: stroke-dashoffset 0.5s ease 0s;
  }

  .CircularProgressbar .CircularProgressbar-trail {
    stroke: $background-color;
  }

  .CircularProgressbar .CircularProgressbar-text {
    fill: $primary-color;
    font-size: 20px;
    dominant-baseline: middle;
    text-anchor: middle;
  }

  .CircularProgressbar .CircularProgressbar-background {
    fill: #d6d6d6;
  }

  /*
   * Sample background styles. Use these with e.g.:
   *
   *   <CircularProgressbar
   *     className="CircularProgressbar-inverted"
   *     background
   *     percentage={50}
   *   />
   */
  .CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-background {
    fill: $scroll-bar-color;
  }

  .CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-text {
    fill: #fff;
  }

  .CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-path {
    stroke: #fff;
  }

  .CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-trail {
    stroke: transparent;
  }
}
